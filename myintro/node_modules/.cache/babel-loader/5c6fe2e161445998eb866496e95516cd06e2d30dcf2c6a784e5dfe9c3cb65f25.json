{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEWA8\\\\ReactA1\\\\myintro\\\\src\\\\List Rendering\\\\ParentComp.jsx\";\nimport React from 'react';\nimport { ChildComp } from './ChildComp';\nimport { PersonList } from './PersonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ParentComp = () => {\n  let persons = [{\n    name: \"Rushi\",\n    age: 23,\n    id: 1,\n    skills: \"Core Java, SQL\"\n  }, {\n    name: \"Rohit\",\n    age: 23,\n    id: 2,\n    skills: \"JavaScript, Advanced Java\"\n  }, {\n    name: \"Mahesh\",\n    age: 25,\n    id: 3,\n    skills: \"Core Java\"\n  }, {\n    name: \"Ashutosh\",\n    age: 22,\n    id: 4,\n    skills: \"Python\"\n  }, {\n    name: \"Girish\",\n    age: 24,\n    id: 5,\n    skills: \"Full Stack Developer\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: persons.map(person => {\n      return /*#__PURE__*/_jsxDEV(ChildComp, {\n        person1: person\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = ParentComp;\nvar _c;\n$RefreshReg$(_c, \"ParentComp\");","map":{"version":3,"names":["React","ChildComp","PersonList","jsxDEV","_jsxDEV","Fragment","_Fragment","ParentComp","persons","name","age","id","skills","children","map","person","person1","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/WEWA8/ReactA1/myintro/src/List Rendering/ParentComp.jsx"],"sourcesContent":["import React from 'react'\r\nimport { ChildComp } from './ChildComp'\r\nimport { PersonList } from './PersonList'\r\n\r\nexport const ParentComp = () => {\r\nlet persons = [\r\n    {\r\n        name: \"Rushi\",\r\n        age: 23,\r\n        id: 1,\r\n        skills: \"Core Java, SQL\"\r\n    },\r\n    {\r\n        name: \"Rohit\",\r\n        age: 23,\r\n        id: 2,\r\n        skills: \"JavaScript, Advanced Java\"\r\n    },\r\n    {\r\n        name: \"Mahesh\",\r\n        age: 25,\r\n        id: 3,\r\n        skills: \"Core Java\"\r\n    },\r\n    {\r\n        name: \"Ashutosh\",\r\n        age: 22,\r\n        id: 4,\r\n        skills: \"Python\"\r\n    },\r\n    {\r\n        name: \"Girish\",\r\n        age: 24,\r\n        id: 5,\r\n        skills: \"Full Stack Developer\"\r\n    }\r\n]\r\n  return (\r\n    <>\r\n{\r\n    persons.map((person)=>{\r\n        return <ChildComp key={person.id} person1={person}/>\r\n    })\r\n}\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,UAAU,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAChC,IAAIC,OAAO,GAAG,CACV;IACIC,IAAI,EAAE,OAAO;IACbC,GAAG,EAAE,EAAE;IACPC,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE;EACZ,CAAC,EACD;IACIH,IAAI,EAAE,OAAO;IACbC,GAAG,EAAE,EAAE;IACPC,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE;EACZ,CAAC,EACD;IACIH,IAAI,EAAE,QAAQ;IACdC,GAAG,EAAE,EAAE;IACPC,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE;EACZ,CAAC,EACD;IACIH,IAAI,EAAE,UAAU;IAChBC,GAAG,EAAE,EAAE;IACPC,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE;EACZ,CAAC,EACD;IACIH,IAAI,EAAE,QAAQ;IACdC,GAAG,EAAE,EAAE;IACPC,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE;EACZ,CAAC,CACJ;EACC,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,EAEAL,OAAO,CAACM,GAAG,CAAEC,MAAM,IAAG;MAClB,oBAAOX,OAAA,CAACH,SAAS;QAAiBe,OAAO,EAAED;MAAO,GAA3BA,MAAM,CAACJ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC;IACxD,CAAC;EAAC,gBAEA,CAAC;AAEP,CAAC;AAAAC,EAAA,GA1CYd,UAAU;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}