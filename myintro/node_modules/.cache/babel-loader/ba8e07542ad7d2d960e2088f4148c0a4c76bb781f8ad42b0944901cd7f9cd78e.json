{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEWA8\\\\ReactA1\\\\myintro\\\\src\\\\task2\\\\Ref.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Imgc.css\"; // Import the CSS file \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Ref extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n    this.state = {\n      inputValue: \"\"\n    };\n    this.inputRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n  render() {\n    const {\n      inputValue\n    } = this.state;\n    let divClass;\n    if (inputValue === \"box1\" || inputValue === \"box2\" || inputValue === \"box3\" || inputValue === \"box4\" || inputValue === \"box5\") {\n      divClass = inputValue;\n    }\n    return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: divClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"\",\n          name: \"\",\n          ref: this.inputRef,\n          onChange: this.handleChange,\n          placeholder: \"Enter text to change the class of the box.\",\n          style: {\n            width: \"300px\",\n            marginBottom: \"20px\",\n            padding: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.clickHandle,\n          style: {\n            padding: \"10px\"\n          },\n          children: \"Click me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Ref;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Ref","constructor","props","handleChange","event","setState","inputValue","target","value","state","inputRef","createRef","componentDidMount","current","focus","render","divClass","StrictMode","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","name","ref","onChange","placeholder","style","width","marginBottom","padding","onClick","clickHandle"],"sources":["D:/WEWA8/ReactA1/myintro/src/task2/Ref.jsx"],"sourcesContent":["import React, { Component } from \"react\"; \r\nimport \"./Imgc.css\"; // Import the CSS file \r\n \r\nclass Ref extends Component { \r\n    constructor(props) { \r\n        super(props); \r\n        this.state = { \r\n            inputValue: \"\" \r\n        }; \r\n        this.inputRef = React.createRef(); \r\n    } \r\n \r\n    componentDidMount() { \r\n        this.inputRef.current.focus(); \r\n    } \r\n \r\n    handleChange = (event) => { \r\n        this.setState({ inputValue: event.target.value }); \r\n    } \r\n \r\n    render() { \r\n        const { inputValue } = this.state; \r\n        let divClass ;  \r\n        if (inputValue === \"box1\" || inputValue === \"box2\" || inputValue === \"box3\" || inputValue === \"box4\" || inputValue === \"box5\") { \r\n            divClass = inputValue;  \r\n        } \r\n \r\n        return ( \r\n            <React.StrictMode><div className=\"container\"> \r\n                <div className={divClass}></div> \r\n                <input  \r\n                    type=\"text\"  \r\n                    className=\"\"  \r\n                    name=\"\"  \r\n                    ref={this.inputRef}  \r\n                    onChange={this.handleChange}  \r\n                    placeholder=\"Enter text to change the class of the box.\" \r\n                    style={{width:\"300px\", marginBottom:\"20px\", padding:\"10px\"}} \r\n                /> \r\n                <button onClick={this.clickHandle} style={{padding:\"10px\"}}>Click me</button> \r\n                </div> \r\n            </React.StrictMode> \r\n        ); \r\n    } \r\n} \r\n \r\nexport default Ref;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,GAAG,SAASH,SAAS,CAAC;EACxBI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAWjBC,YAAY,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACC,QAAQ,CAAC;QAAEC,UAAU,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,CAAC;IACrD,CAAC;IAZG,IAAI,CAACC,KAAK,GAAG;MACTH,UAAU,EAAE;IAChB,CAAC;IACD,IAAI,CAACI,QAAQ,gBAAGd,KAAK,CAACe,SAAS,CAAC,CAAC;EACrC;EAEAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACF,QAAQ,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;EACjC;EAMAC,MAAMA,CAAA,EAAG;IACL,MAAM;MAAET;IAAW,CAAC,GAAG,IAAI,CAACG,KAAK;IACjC,IAAIO,QAAQ;IACZ,IAAIV,UAAU,KAAK,MAAM,IAAIA,UAAU,KAAK,MAAM,IAAIA,UAAU,KAAK,MAAM,IAAIA,UAAU,KAAK,MAAM,IAAIA,UAAU,KAAK,MAAM,EAAE;MAC3HU,QAAQ,GAAGV,UAAU;IACzB;IAEA,oBACIP,OAAA,CAACH,KAAK,CAACqB,UAAU;MAAAC,QAAA,eAACnB,OAAA;QAAKoB,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxCnB,OAAA;UAAKoB,SAAS,EAAEH;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChCxB,OAAA;UACIyB,IAAI,EAAC,MAAM;UACXL,SAAS,EAAC,EAAE;UACZM,IAAI,EAAC,EAAE;UACPC,GAAG,EAAE,IAAI,CAAChB,QAAS;UACnBiB,QAAQ,EAAE,IAAI,CAACxB,YAAa;UAC5ByB,WAAW,EAAC,4CAA4C;UACxDC,KAAK,EAAE;YAACC,KAAK,EAAC,OAAO;YAAEC,YAAY,EAAC,MAAM;YAAEC,OAAO,EAAC;UAAM;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACFxB,OAAA;UAAQkC,OAAO,EAAE,IAAI,CAACC,WAAY;UAACL,KAAK,EAAE;YAACG,OAAO,EAAC;UAAM,CAAE;UAAAd,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAE3B;AACJ;AAEA,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}